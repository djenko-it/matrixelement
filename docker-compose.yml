version: "3.8"

services:
  synapse:
    image: "docker.io/matrixdotorg/synapse:${SYNAPSE_VERSION}"
    restart: unless-stopped
    environment:
      - SYNAPSE_CONFIG_PATH=/data/homeserver.yaml
    volumes:
      - .synapse_data:/data
    depends_on:
      - synapse_db
    networks:
      - traefik-network
    labels:
      - traefik.enable=true
      - traefik.http.routers.synapse.entrypoints=websecure
      - traefik.http.routers.synapse.rule=Host(`matrix.${DOMAIN}`)
      - traefik.http.routers.synapse.tls=true
      - traefik.http.routers.synapse.tls.certresolver=letsencrypt

  synapse_db:
    image: "docker.io/postgres:${POSTGRES_VERSION}"
    restart: unless-stopped
    environment:
      - POSTGRES_USER=synapse
      - POSTGRES_PASSWORD=aComplexPassphraseNobodyCanGuess
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - synapse_db_data:/var/lib/postgresql/data
    networks:
      - traefik-network

  coturn:
    image: "instrumentisto/coturn:${COTURN_VERSION}"
    restart: "unless-stopped"
    volumes:
      - coturn:/etc/coturn
    ports:
      - "49160-49200:49160-49200/udp"
      - "3478:3478"
      - "5349:5349"
    networks:
      - traefik-network

  element:
    image: "vectorim/element-web:${ELEMENT_VERSION}"
    restart: unless-stopped
    volumes:
      - element:/app
    networks:
      - traefik-network
    labels:
      - traefik.enable=true
      - traefik.http.routers.element.entrypoints=websecure
      - traefik.http.routers.element.rule=Host(`web.${DOMAIN}`)
      - traefik.http.routers.element.tls=true
      - traefik.http.routers.element.tls.certresolver=letsencrypt

volumes:
  synapse_data:
  synapse_db_data:
  coturn:
  element:

networks:
  traefik-network:
    external: true
